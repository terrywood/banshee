//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by Fernflower decompiler)
//

package cn.skypark.code;

import cn.skypark.code.Code_aa;
import cn.skypark.code.MyCode;
import cn.skypark.code.Node;
import cn.skypark.code.PairXY;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.zip.CRC32;

public class Code_huatai extends Code_aa {
    public Code_huatai() {
    }

    String[] getModelKey() {
        String[] model = new String[]{"O", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "A", "b", "B", "c", "C", "d", "D", "e", "E", "f", "F", "g", "G", "h", "H", "i", "j", "J", "k", "K", "L", "m", "M", "n", "N", "p", "P", "q", "Q", "r", "R", "s", "S", "t", "T", "u", "U", "v", "V", "w", "W", "x", "X", "y", "Y", "z", "Z"};
        return model;
    }

    String[] getModelValue() {
        String[] model = new String[]{"[5,0][6,0][7,0][8,0][9,0][10,0][11,0][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][12,1][13,1][2,2][3,2][4,2][5,2][11,2][12,2][13,2][14,2][1,3][2,3][3,3][13,3][14,3][15,3][1,4][2,4][14,4][15,4][1,5][2,5][14,5][15,5][16,5][0,6][1,6][15,6][16,6][0,7][1,7][15,7][16,7][0,8][1,8][15,8][16,8][0,9][1,9][15,9][16,9][0,10][1,10][15,10][16,10][0,11][1,11][15,11][16,11][0,12][1,12][2,12][14,12][15,12][16,12][1,13][2,13][14,13][15,13][1,14][2,14][3,14][13,14][14,14][15,14][2,15][3,15][4,15][5,15][11,15][12,15][13,15][14,15][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][11,16][12,16][13,16][5,17][6,17][7,17][8,17][9,17][10,17][11,17]", "[2,0][3,0][4,0][0,1][1,1][2,1][3,1][4,1][0,2][1,2][2,2][3,2][4,2][3,3][4,3][3,4][4,4][3,5][4,5][3,6][4,6][3,7][4,7][3,8][4,8][3,9][4,9][3,10][4,10][3,11][4,11][3,12][4,12][3,13][4,13][3,14][4,14][3,15][4,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17]", "[2,0][3,0][4,0][5,0][6,0][7,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][8,2][9,2][9,3][10,3][9,4][10,4][9,5][10,5][9,6][10,6][8,7][9,7][7,8][8,8][6,9][7,9][5,10][6,10][4,11][5,11][3,12][4,12][2,13][3,13][1,14][2,14][0,15][1,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17][8,17][9,17][10,17]", "[1,0][2,0][3,0][4,0][5,0][6,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][0,2][7,2][8,2][9,2][8,3][9,3][8,4][9,4][8,5][9,5][7,6][8,6][6,7][7,7][2,8][3,8][4,8][5,8][6,8][2,9][3,9][4,9][5,9][6,9][7,9][6,10][7,10][8,10][8,11][9,11][8,12][9,12][8,13][9,13][8,14][9,14][0,15][6,15][7,15][8,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][1,17][2,17][3,17][4,17][5,17][6,17]", "[8,0][9,0][7,1][8,1][9,1][6,2][7,2][8,2][9,2][5,3][6,3][7,3][8,3][9,3][5,4][6,4][8,4][9,4][4,5][5,5][8,5][9,5][3,6][4,6][8,6][9,6][3,7][4,7][8,7][9,7][2,8][3,8][8,8][9,8][1,9][2,9][8,9][9,9][0,10][1,10][2,10][8,10][9,10][0,11][1,11][2,11][3,11][4,11][5,11][6,11][7,11][8,11][9,11][10,11][11,11][0,12][1,12][2,12][3,12][4,12][5,12][6,12][7,12][8,12][9,12][10,12][11,12][8,13][9,13][8,14][9,14][8,15][9,15][8,16][9,16][8,17][9,17]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][0,6][1,6][0,7][1,7][2,7][3,7][4,7][5,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][7,8][5,9][6,9][7,9][8,9][7,10][8,10][9,10][8,11][9,11][8,12][9,12][8,13][9,13][7,14][8,14][9,14][0,15][6,15][7,15][8,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][1,17][2,17][3,17][4,17][5,17]", "[4,0][5,0][6,0][7,0][8,0][9,0][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][2,2][3,2][4,2][10,2][1,3][2,3][1,4][2,4][0,5][1,5][0,6][1,6][0,7][1,7][4,7][5,7][6,7][7,7][8,7][0,8][1,8][3,8][4,8][5,8][6,8][7,8][8,8][9,8][10,8][0,9][1,9][2,9][3,9][9,9][10,9][0,10][1,10][2,10][9,10][10,10][11,10][0,11][1,11][10,11][11,11][0,12][1,12][10,12][11,12][0,13][1,13][10,13][11,13][1,14][2,14][10,14][11,14][1,15][2,15][3,15][8,15][9,15][10,15][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][4,17][5,17][6,17][7,17][8,17]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][10,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][9,2][10,2][8,3][9,3][7,4][8,4][7,5][8,5][6,6][7,6][6,7][5,8][6,8][4,9][5,9][4,10][5,10][3,11][4,11][3,12][4,12][2,13][3,13][2,14][3,14][2,15][3,15][1,16][2,16][1,17][2,17]", "[4,0][5,0][6,0][7,0][8,0][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][1,2][2,2][3,2][8,2][9,2][10,2][1,3][2,3][9,3][10,3][1,4][2,4][9,4][10,4][1,5][2,5][3,5][9,5][10,5][2,6][3,6][4,6][8,6][9,6][3,7][4,7][5,7][7,7][8,7][3,8][4,8][5,8][6,8][7,8][2,9][3,9][4,9][6,9][7,9][8,9][9,9][1,10][2,10][8,10][9,10][10,10][0,11][1,11][9,11][10,11][11,11][0,12][1,12][10,12][11,12][0,13][1,13][10,13][11,13][0,14][1,14][2,14][10,14][11,14][1,15][2,15][3,15][8,15][9,15][10,15][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][3,17][4,17][5,17][6,17][7,17][8,17]", "[3,0][4,0][5,0][6,0][7,0][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][1,2][2,2][3,2][8,2][9,2][10,2][1,3][2,3][9,3][10,3][0,4][1,4][10,4][0,5][1,5][10,5][11,5][0,6][1,6][10,6][11,6][0,7][1,7][10,7][11,7][0,8][1,8][2,8][9,8][10,8][11,8][1,9][2,9][3,9][8,9][9,9][10,9][11,9][2,10][3,10][4,10][5,10][6,10][7,10][8,10][10,10][11,10][3,11][4,11][5,11][6,11][7,11][10,11][11,11][10,12][9,13][10,13][9,14][10,14][1,15][7,15][8,15][9,15][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][2,17][3,17][4,17][5,17][6,17]", "[2,0][3,0][4,0][5,0][6,0][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][1,2][7,2][8,2][7,3][8,3][7,4][8,4][3,5][4,5][5,5][6,5][7,5][8,5][1,6][2,6][3,6][4,6][5,6][6,6][7,6][8,6][0,7][1,7][2,7][7,7][8,7][0,8][1,8][7,8][8,8][0,9][1,9][7,9][8,9][0,10][1,10][2,10][6,10][7,10][8,10][1,11][2,11][3,11][4,11][5,11][6,11][7,11][8,11][9,11][10,11][2,12][3,12][4,12][5,12][8,12][9,12][10,12]", "[8,0][7,1][8,1][9,1][7,2][8,2][9,2][6,3][7,3][9,3][10,3][6,4][7,4][9,4][10,4][5,5][6,5][7,5][9,5][10,5][11,5][5,6][6,6][10,6][11,6][5,7][6,7][10,7][11,7][4,8][5,8][11,8][12,8][4,9][5,9][11,9][12,9][3,10][4,10][12,10][13,10][3,11][4,11][5,11][6,11][7,11][8,11][9,11][10,11][11,11][12,11][13,11][2,12][3,12][4,12][5,12][6,12][7,12][8,12][9,12][10,12][11,12][12,12][13,12][14,12][2,13][3,13][13,13][14,13][2,14][3,14][13,14][14,14][1,15][2,15][14,15][15,15][1,16][2,16][14,16][15,16][0,17][1,17][15,17][16,17]", "[0,0][1,0][0,1][1,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][4,5][5,5][6,5][7,5][0,6][1,6][3,6][4,6][5,6][6,6][7,6][8,6][9,6][0,7][1,7][2,7][3,7][8,7][9,7][0,8][1,8][2,8][9,8][10,8][0,9][1,9][9,9][10,9][0,10][1,10][9,10][10,10][0,11][1,11][9,11][10,11][0,12][1,12][9,12][10,12][0,13][1,13][9,13][10,13][0,14][1,14][8,14][9,14][0,15][1,15][2,15][3,15][7,15][8,15][9,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][0,17][1,17][4,17][5,17][6,17][7,17]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][0,2][1,2][7,2][8,2][9,2][0,3][1,3][8,3][9,3][0,4][1,4][8,4][9,4][0,5][1,5][8,5][9,5][0,6][1,6][7,6][8,6][0,7][1,7][6,7][7,7][8,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][0,9][1,9][2,9][3,9][4,9][5,9][6,9][7,9][0,10][1,10][6,10][7,10][8,10][0,11][1,11][8,11][9,11][0,12][1,12][9,12][10,12][0,13][1,13][9,13][10,13][0,14][1,14][9,14][10,14][0,15][1,15][8,15][9,15][10,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17]", "[3,0][4,0][5,0][6,0][7,0][2,1][3,1][4,1][5,1][6,1][7,1][8,1][1,2][2,2][3,2][8,2][1,3][2,3][0,4][1,4][0,5][1,5][0,6][1,6][0,7][1,7][0,8][1,8][1,9][2,9][1,10][2,10][3,10][8,10][2,11][3,11][4,11][5,11][6,11][7,11][8,11][3,12][4,12][5,12][6,12][7,12]", "[5,0][6,0][7,0][8,0][9,0][10,0][11,0][12,0][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][12,1][13,1][14,1][2,2][3,2][4,2][5,2][13,2][14,2][1,3][2,3][3,3][1,4][2,4][0,5][1,5][2,5][0,6][1,6][0,7][1,7][0,8][1,8][0,9][1,9][0,10][1,10][0,11][1,11][0,12][1,12][2,12][1,13][2,13][1,14][2,14][3,14][14,14][2,15][3,15][4,15][5,15][12,15][13,15][14,15][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][11,16][12,16][13,16][6,17][7,17][8,17][9,17][10,17][11,17]", "[9,0][10,0][9,1][10,1][9,2][10,2][9,3][10,3][9,4][10,4][3,5][4,5][5,5][6,5][9,5][10,5][2,6][3,6][4,6][5,6][6,6][7,6][8,6][9,6][10,6][1,7][2,7][3,7][7,7][8,7][9,7][10,7][0,8][1,8][2,8][9,8][10,8][0,9][1,9][9,9][10,9][0,10][1,10][9,10][10,10][0,11][1,11][9,11][10,11][0,12][1,12][9,12][10,12][0,13][1,13][9,13][10,13][0,14][1,14][2,14][8,14][9,14][10,14][1,15][2,15][7,15][8,15][9,15][10,15][1,16][2,16][3,16][4,16][5,16][6,16][7,16][9,16][10,16][3,17][4,17][5,17][6,17][9,17][10,17]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][0,2][1,2][9,2][10,2][11,2][12,2][0,3][1,3][11,3][12,3][13,3][0,4][1,4][12,4][13,4][0,5][1,5][12,5][13,5][14,5][0,6][1,6][13,6][14,6][0,7][1,7][13,7][14,7][0,8][1,8][13,8][14,8][0,9][1,9][13,9][14,9][0,10][1,10][13,10][14,10][0,11][1,11][13,11][14,11][0,12][1,12][12,12][13,12][0,13][1,13][12,13][13,13][0,14][1,14][11,14][12,14][0,15][1,15][9,15][10,15][11,15][12,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][11,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17][8,17][9,17]", "[3,0][4,0][5,0][6,0][2,1][3,1][4,1][5,1][6,1][7,1][8,1][1,2][2,2][3,2][7,2][8,2][1,3][2,3][8,3][9,3][0,4][1,4][8,4][9,4][0,5][1,5][2,5][3,5][4,5][5,5][6,5][7,5][8,5][9,5][0,6][1,6][2,6][3,6][4,6][5,6][6,6][7,6][8,6][9,6][0,7][1,7][0,8][1,8][1,9][2,9][1,10][2,10][3,10][9,10][2,11][3,11][4,11][5,11][6,11][7,11][8,11][9,11][3,12][4,12][5,12][6,12][7,12][8,12]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][0,6][1,6][0,7][1,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][7,8][8,8][0,9][1,9][2,9][3,9][4,9][5,9][6,9][7,9][8,9][0,10][1,10][0,11][1,11][0,12][1,12][0,13][1,13][0,14][1,14][0,15][1,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17][8,17][9,17][10,17]", "[3,0][4,0][5,0][6,0][7,0][2,1][3,1][2,2][3,2][2,3][3,3][2,4][3,4][0,5][1,5][2,5][3,5][4,5][5,5][6,5][0,6][1,6][2,6][3,6][4,6][5,6][6,6][2,7][3,7][2,8][3,8][2,9][3,9][2,10][3,10][2,11][3,11][2,12][3,12][2,13][3,13][2,14][3,14][2,15][3,15][2,16][3,16][2,17][3,17]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][0,6][1,6][0,7][1,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][7,8][8,8][0,9][1,9][2,9][3,9][4,9][5,9][6,9][7,9][8,9][0,10][1,10][0,11][1,11][0,12][1,12][0,13][1,13][0,14][1,14][0,15][1,15][0,16][1,16][0,17][1,17]", "[3,0][4,0][5,0][6,0][9,0][10,0][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][1,2][2,2][3,2][7,2][8,2][9,2][10,2][1,3][2,3][9,3][10,3][0,4][1,4][9,4][10,4][0,5][1,5][9,5][10,5][0,6][1,6][9,6][10,6][0,7][1,7][9,7][10,7][0,8][1,8][9,8][10,8][0,9][1,9][2,9][8,9][9,9][10,9][1,10][2,10][7,10][8,10][9,10][10,10][1,11][2,11][3,11][4,11][5,11][6,11][7,11][9,11][10,11][3,12][4,12][5,12][6,12][9,12][10,12][9,13][10,13][8,14][9,14][10,14][1,15][7,15][8,15][9,15][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16]", "[5,0][6,0][7,0][8,0][9,0][10,0][11,0][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][12,1][13,1][2,2][3,2][4,2][12,2][13,2][1,3][2,3][3,3][1,4][2,4][0,5][1,5][2,5][0,6][1,6][0,7][1,7][0,8][1,8][0,9][1,9][0,10][1,10][12,10][13,10][0,11][1,11][12,11][13,11][0,12][1,12][2,12][12,12][13,12][1,13][2,13][12,13][13,13][1,14][2,14][3,14][12,14][13,14][2,15][3,15][4,15][5,15][12,15][13,15][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][11,16][12,16][13,16][5,17][6,17][7,17][8,17][9,17][10,17][11,17]", "[0,0][1,0][0,1][1,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][4,5][5,5][6,5][7,5][0,6][1,6][3,6][4,6][5,6][6,6][7,6][8,6][0,7][1,7][2,7][3,7][8,7][9,7][0,8][1,8][2,8][8,8][9,8][0,9][1,9][8,9][9,9][0,10][1,10][8,10][9,10][0,11][1,11][8,11][9,11][0,12][1,12][8,12][9,12][0,13][1,13][8,13][9,13][0,14][1,14][8,14][9,14][0,15][1,15][8,15][9,15][0,16][1,16][8,16][9,16][0,17][1,17][8,17][9,17]", "[0,0][1,0][12,0][13,0][0,1][1,1][12,1][13,1][0,2][1,2][12,2][13,2][0,3][1,3][12,3][13,3][0,4][1,4][12,4][13,4][0,5][1,5][12,5][13,5][0,6][1,6][12,6][13,6][0,7][1,7][12,7][13,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][7,8][8,8][9,8][10,8][11,8][12,8][13,8][0,9][1,9][2,9][3,9][4,9][5,9][6,9][7,9][8,9][9,9][10,9][11,9][12,9][13,9][0,10][1,10][12,10][13,10][0,11][1,11][12,11][13,11][0,12][1,12][12,12][13,12][0,13][1,13][12,13][13,13][0,14][1,14][12,14][13,14][0,15][1,15][12,15][13,15][0,16][1,16][12,16][13,16][0,17][1,17][12,17][13,17]", "[0,0][1,0][0,1][1,1][0,5][1,5][0,6][1,6][0,7][1,7][0,8][1,8][0,9][1,9][0,10][1,10][0,11][1,11][0,12][1,12][0,13][1,13][0,14][1,14][0,15][1,15][0,16][1,16][0,17][1,17]", "[4,0][5,0][4,1][5,1][4,5][5,5][4,6][5,6][4,7][5,7][4,8][5,8][4,9][5,9][4,10][5,10][4,11][5,11][4,12][5,12][4,13][5,13][4,14][5,14][4,15][5,15][4,16][5,16][4,17][5,17][4,18][5,18][4,19][5,19][0,20][4,20][5,20][0,21][1,21][2,21][3,21][4,21]", "[5,0][6,0][5,1][6,1][5,2][6,2][5,3][6,3][5,4][6,4][5,5][6,5][5,6][6,6][5,7][6,7][5,8][6,8][5,9][6,9][5,10][6,10][5,11][6,11][5,12][6,12][5,13][6,13][5,14][6,14][5,15][6,15][5,16][6,16][5,17][6,17][4,18][5,18][0,19][1,19][2,19][3,19][4,19][5,19][0,20][1,20][2,20][3,20]", "[0,0][1,0][0,1][1,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][8,5][9,5][0,6][1,6][7,6][8,6][0,7][1,7][6,7][7,7][0,8][1,8][5,8][6,8][0,9][1,9][4,9][5,9][0,10][1,10][3,10][4,10][0,11][1,11][2,11][3,11][4,11][0,12][1,12][3,12][4,12][5,12][0,13][1,13][4,13][5,13][6,13][0,14][1,14][5,14][6,14][7,14][0,15][1,15][6,15][7,15][8,15][0,16][1,16][7,16][8,16][9,16][0,17][1,17][8,17][9,17][10,17]", "[0,0][1,0][10,0][11,0][0,1][1,1][9,1][10,1][0,2][1,2][8,2][9,2][0,3][1,3][7,3][8,3][0,4][1,4][6,4][7,4][0,5][1,5][5,5][6,5][0,6][1,6][4,6][5,6][0,7][1,7][3,7][4,7][0,8][1,8][2,8][3,8][0,9][1,9][3,9][4,9][0,10][1,10][4,10][5,10][0,11][1,11][5,11][6,11][0,12][1,12][6,12][7,12][0,13][1,13][7,13][8,13][0,14][1,14][8,14][9,14][0,15][1,15][9,15][10,15][0,16][1,16][10,16][11,16][0,17][1,17][11,17][12,17]", "[0,0][1,0][0,1][1,1][0,2][1,2][0,3][1,3][0,4][1,4][0,5][1,5][0,6][1,6][0,7][1,7][0,8][1,8][0,9][1,9][0,10][1,10][0,11][1,11][0,12][1,12][0,13][1,13][0,14][1,14][0,15][1,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17][8,17][9,17][10,17]", "[0,0][1,0][4,0][5,0][6,0][7,0][12,0][13,0][14,0][15,0][0,1][1,1][3,1][4,1][5,1][6,1][7,1][8,1][11,1][12,1][13,1][14,1][15,1][16,1][0,2][1,2][2,2][3,2][8,2][9,2][10,2][11,2][16,2][17,2][0,3][1,3][2,3][8,3][9,3][10,3][16,3][17,3][0,4][1,4][8,4][9,4][16,4][17,4][0,5][1,5][8,5][9,5][16,5][17,5][0,6][1,6][8,6][9,6][16,6][17,6][0,7][1,7][8,7][9,7][16,7][17,7][0,8][1,8][8,8][9,8][16,8][17,8][0,9][1,9][8,9][9,9][16,9][17,9][0,10][1,10][8,10][9,10][16,10][17,10][0,11][1,11][8,11][9,11][16,11][17,11][0,12][1,12][8,12][9,12][16,12][17,12]", "[0,0][1,0][2,0][14,0][15,0][16,0][0,1][1,1][2,1][14,1][15,1][16,1][0,2][1,2][2,2][3,2][13,2][14,2][15,2][16,2][0,3][1,3][2,3][3,3][13,3][14,3][15,3][16,3][0,4][1,4][2,4][3,4][4,4][12,4][13,4][14,4][15,4][16,4][0,5][1,5][3,5][4,5][12,5][13,5][15,5][16,5][0,6][1,6][3,6][4,6][12,6][13,6][15,6][16,6][0,7][1,7][4,7][5,7][11,7][12,7][15,7][16,7][0,8][1,8][4,8][5,8][11,8][12,8][15,8][16,8][0,9][1,9][4,9][5,9][6,9][10,9][11,9][12,9][15,9][16,9][0,10][1,10][5,10][6,10][10,10][11,10][15,10][16,10][0,11][1,11][5,11][6,11][10,11][11,11][15,11][16,11][0,12][1,12][6,12][7,12][9,12][10,12][15,12][16,12][0,13][1,13][6,13][7,13][9,13][10,13][15,13][16,13][0,14][1,14][6,14][7,14][8,14][9,14][10,14][15,14][16,14][0,15][1,15][7,15][8,15][9,15][15,15][16,15][0,16][1,16][7,16][8,16][9,16][15,16][16,16][0,17][1,17][15,17][16,17]", "[0,0][1,0][4,0][5,0][6,0][7,0][0,1][1,1][3,1][4,1][5,1][6,1][7,1][8,1][0,2][1,2][2,2][3,2][8,2][9,2][0,3][1,3][2,3][8,3][9,3][0,4][1,4][8,4][9,4][0,5][1,5][8,5][9,5][0,6][1,6][8,6][9,6][0,7][1,7][8,7][9,7][0,8][1,8][8,8][9,8][0,9][1,9][8,9][9,9][0,10][1,10][8,10][9,10][0,11][1,11][8,11][9,11][0,12][1,12][8,12][9,12]", "[0,0][1,0][2,0][12,0][13,0][0,1][1,1][2,1][12,1][13,1][0,2][1,2][2,2][3,2][12,2][13,2][0,3][1,3][2,3][3,3][4,3][12,3][13,3][0,4][1,4][3,4][4,4][12,4][13,4][0,5][1,5][4,5][5,5][12,5][13,5][0,6][1,6][4,6][5,6][12,6][13,6][0,7][1,7][5,7][6,7][12,7][13,7][0,8][1,8][6,8][7,8][12,8][13,8][0,9][1,9][6,9][7,9][12,9][13,9][0,10][1,10][7,10][8,10][12,10][13,10][0,11][1,11][8,11][9,11][12,11][13,11][0,12][1,12][8,12][9,12][12,12][13,12][0,13][1,13][9,13][10,13][12,13][13,13][0,14][1,14][9,14][10,14][11,14][12,14][13,14][0,15][1,15][10,15][11,15][12,15][13,15][0,16][1,16][11,16][12,16][13,16][0,17][1,17][11,17][12,17][13,17]", "[0,0][1,0][4,0][5,0][6,0][7,0][0,1][1,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][2,2][3,2][8,2][9,2][0,3][1,3][2,3][8,3][9,3][10,3][0,4][1,4][9,4][10,4][0,5][1,5][9,5][10,5][0,6][1,6][9,6][10,6][0,7][1,7][9,7][10,7][0,8][1,8][9,8][10,8][0,9][1,9][8,9][9,9][0,10][1,10][2,10][3,10][7,10][8,10][9,10][0,11][1,11][2,11][3,11][4,11][5,11][6,11][7,11][8,11][0,12][1,12][4,12][5,12][6,12][7,12][0,13][1,13][0,14][1,14][0,15][1,15][0,16][1,16]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][8,2][9,2][10,2][0,3][1,3][9,3][10,3][0,4][1,4][9,4][10,4][0,5][1,5][9,5][10,5][0,6][1,6][8,6][9,6][10,6][0,7][1,7][7,7][8,7][9,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][7,8][8,8][0,9][1,9][2,9][3,9][4,9][5,9][6,9][0,10][1,10][0,11][1,11][0,12][1,12][0,13][1,13][0,14][1,14][0,15][1,15][0,16][1,16][0,17][1,17]", "[3,0][4,0][5,0][6,0][9,0][10,0][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][1,2][2,2][3,2][7,2][8,2][9,2][10,2][0,3][1,3][2,3][9,3][10,3][0,4][1,4][9,4][10,4][0,5][1,5][9,5][10,5][0,6][1,6][9,6][10,6][0,7][1,7][9,7][10,7][0,8][1,8][9,8][10,8][0,9][1,9][2,9][8,9][9,9][10,9][1,10][2,10][7,10][8,10][9,10][10,10][1,11][2,11][3,11][4,11][5,11][6,11][7,11][9,11][10,11][3,12][4,12][5,12][6,12][9,12][10,12][9,13][10,13][9,14][10,14][9,15][10,15][9,16][10,16]", "[5,0][6,0][7,0][8,0][9,0][10,0][11,0][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][12,1][13,1][2,2][3,2][4,2][5,2][11,2][12,2][13,2][14,2][1,3][2,3][3,3][13,3][14,3][15,3][1,4][2,4][14,4][15,4][0,5][1,5][2,5][14,5][15,5][16,5][0,6][1,6][15,6][16,6][0,7][1,7][15,7][16,7][0,8][1,8][15,8][16,8][0,9][1,9][15,9][16,9][0,10][1,10][15,10][16,10][0,11][1,11][15,11][16,11][0,12][1,12][2,12][14,12][15,12][1,13][2,13][14,13][15,13][1,14][2,14][3,14][13,14][14,14][15,14][2,15][3,15][4,15][5,15][11,15][12,15][13,15][14,15][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][11,16][12,16][13,16][5,17][6,17][7,17][8,17][9,17][10,17][11,17][12,17][11,18][12,18][13,18][14,18][15,18][16,18][13,19][14,19][15,19][16,19][17,19][18,19][16,20][17,20]", "[0,0][1,0][4,0][5,0][6,0][0,1][1,1][3,1][4,1][5,1][6,1][0,2][1,2][2,2][3,2][0,3][1,3][2,3][0,4][1,4][0,5][1,5][0,6][1,6][0,7][1,7][0,8][1,8][0,9][1,9][0,10][1,10][0,11][1,11][0,12][1,12]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][0,2][1,2][8,2][9,2][10,2][0,3][1,3][9,3][10,3][0,4][1,4][9,4][10,4][0,5][1,5][9,5][10,5][0,6][1,6][8,6][9,6][0,7][1,7][7,7][8,7][9,7][0,8][1,8][2,8][3,8][4,8][5,8][6,8][7,8][0,9][1,9][2,9][3,9][4,9][5,9][6,9][0,10][1,10][6,10][7,10][0,11][1,11][6,11][7,11][0,12][1,12][7,12][8,12][0,13][1,13][8,13][9,13][0,14][1,14][9,14][10,14][0,15][1,15][9,15][10,15][0,16][1,16][10,16][11,16][0,17][1,17][11,17][12,17]", "[2,0][3,0][4,0][5,0][6,0][1,1][2,1][3,1][4,1][5,1][6,1][7,1][0,2][1,2][7,2][0,3][1,3][0,4][1,4][2,4][1,5][2,5][3,5][4,5][5,5][2,6][3,6][4,6][5,6][6,6][5,7][6,7][7,7][7,8][8,8][7,9][8,9][0,10][6,10][7,10][8,10][0,11][1,11][2,11][3,11][4,11][5,11][6,11][7,11][1,12][2,12][3,12][4,12][5,12][6,12]", "[3,0][4,0][5,0][6,0][7,0][8,0][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][1,2][2,2][8,2][9,2][0,3][1,3][0,4][1,4][0,5][1,5][1,6][2,6][3,6][1,7][2,7][3,7][4,7][5,7][3,8][4,8][5,8][6,8][7,8][5,9][6,9][7,9][8,9][7,10][8,10][9,10][8,11][9,11][10,11][9,12][10,12][9,13][10,13][9,14][10,14][0,15][1,15][8,15][9,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][2,17][3,17][4,17][5,17][6,17][7,17]", "[2,0][3,0][2,1][3,1][2,2][3,2][0,3][1,3][2,3][3,3][4,3][5,3][6,3][0,4][1,4][2,4][3,4][4,4][5,4][6,4][2,5][3,5][2,6][3,6][2,7][3,7][2,8][3,8][2,9][3,9][2,10][3,10][2,11][3,11][2,12][3,12][2,13][3,13][2,14][3,14][4,14][5,14][6,14][3,15][4,15][5,15][6,15]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][10,0][11,0][12,0][13,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][12,1][13,1][6,2][7,2][6,3][7,3][6,4][7,4][6,5][7,5][6,6][7,6][6,7][7,7][6,8][7,8][6,9][7,9][6,10][7,10][6,11][7,11][6,12][7,12][6,13][7,13][6,14][7,14][6,15][7,15][6,16][7,16][6,17][7,17]", "[0,0][1,0][8,0][9,0][0,1][1,1][8,1][9,1][0,2][1,2][8,2][9,2][0,3][1,3][8,3][9,3][0,4][1,4][8,4][9,4][0,5][1,5][8,5][9,5][0,6][1,6][8,6][9,6][0,7][1,7][8,7][9,7][0,8][1,8][8,8][9,8][0,9][1,9][7,9][8,9][9,9][0,10][1,10][6,10][7,10][8,10][9,10][1,11][2,11][3,11][4,11][5,11][6,11][8,11][9,11][2,12][3,12][4,12][5,12][8,12][9,12]", "[0,0][1,0][11,0][12,0][0,1][1,1][11,1][12,1][0,2][1,2][11,2][12,2][0,3][1,3][11,3][12,3][0,4][1,4][11,4][12,4][0,5][1,5][11,5][12,5][0,6][1,6][11,6][12,6][0,7][1,7][11,7][12,7][0,8][1,8][11,8][12,8][0,9][1,9][11,9][12,9][0,10][1,10][11,10][12,10][0,11][1,11][11,11][12,11][0,12][1,12][11,12][12,12][0,13][1,13][11,13][12,13][1,14][2,14][10,14][11,14][12,14][1,15][2,15][3,15][9,15][10,15][11,15][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][3,17][4,17][5,17][6,17][7,17][8,17][9,17]", "[0,0][1,0][9,0][10,0][1,1][2,1][8,1][9,1][1,2][2,2][8,2][9,2][1,3][2,3][8,3][9,3][2,4][3,4][7,4][8,4][2,5][3,5][7,5][8,5][2,6][3,6][7,6][8,6][3,7][4,7][6,7][7,7][3,8][4,8][6,8][7,8][3,9][4,9][6,9][7,9][4,10][5,10][6,10][4,11][5,11][6,11][4,12][5,12][6,12]", "[0,0][1,0][13,0][14,0][1,1][2,1][12,1][13,1][1,2][2,2][12,2][13,2][1,3][2,3][12,3][13,3][2,4][3,4][11,4][12,4][2,5][3,5][11,5][12,5][2,6][3,6][4,6][10,6][11,6][12,6][3,7][4,7][10,7][11,7][3,8][4,8][10,8][11,8][3,9][4,9][5,9][9,9][10,9][11,9][4,10][5,10][9,10][10,10][4,11][5,11][9,11][10,11][5,12][6,12][8,12][9,12][5,13][6,13][8,13][9,13][5,14][6,14][7,14][8,14][9,14][6,15][7,15][8,15][6,16][7,16][8,16][6,17][7,17][8,17]", "[0,0][1,0][8,0][9,0][10,0][17,0][18,0][1,1][2,1][8,1][9,1][10,1][16,1][17,1][1,2][2,2][8,2][9,2][10,2][16,2][17,2][1,3][2,3][7,3][8,3][10,3][11,3][16,3][17,3][2,4][3,4][7,4][8,4][10,4][11,4][15,4][16,4][2,5][3,5][7,5][8,5][10,5][11,5][15,5][16,5][2,6][3,6][7,6][8,6][10,6][11,6][15,6][16,6][3,7][4,7][6,7][7,7][11,7][12,7][14,7][15,7][3,8][4,8][6,8][7,8][11,8][12,8][14,8][15,8][3,9][4,9][6,9][7,9][11,9][12,9][14,9][15,9][4,10][5,10][6,10][12,10][13,10][14,10][4,11][5,11][6,11][12,11][13,11][14,11][4,12][5,12][6,12][12,12][13,12][14,12]", "[0,0][1,0][9,0][10,0][11,0][19,0][0,1][1,1][9,1][10,1][11,1][19,1][1,2][2,2][9,2][10,2][11,2][18,2][19,2][1,3][2,3][9,3][10,3][11,3][18,3][19,3][1,4][2,4][8,4][9,4][11,4][12,4][18,4][19,4][1,5][2,5][8,5][9,5][11,5][12,5][18,5][19,5][2,6][3,6][8,6][9,6][11,6][12,6][17,6][18,6][2,7][3,7][7,7][8,7][9,7][11,7][12,7][13,7][17,7][18,7][2,8][3,8][7,8][8,8][12,8][13,8][17,8][18,8][2,9][3,9][7,9][8,9][12,9][13,9][17,9][18,9][2,10][3,10][4,10][7,10][8,10][12,10][13,10][16,10][17,10][18,10][3,11][4,11][6,11][7,11][13,11][14,11][16,11][17,11][3,12][4,12][6,12][7,12][13,12][14,12][16,12][17,12][3,13][4,13][6,13][7,13][13,13][14,13][16,13][17,13][3,14][4,14][5,14][6,14][7,14][13,14][14,14][15,14][16,14][17,14][4,15][5,15][6,15][14,15][15,15][16,15][4,16][5,16][6,16][14,16][15,16][16,16][4,17][5,17][6,17][14,17][15,17][16,17]", "[0,0][1,0][10,0][11,0][1,1][2,1][9,1][10,1][2,2][3,2][8,2][9,2][2,3][3,3][4,3][8,3][9,3][3,4][4,4][5,4][7,4][8,4][4,5][5,5][6,5][7,5][5,6][6,6][4,7][5,7][6,7][7,7][3,8][4,8][6,8][7,8][8,8][2,9][3,9][7,9][8,9][9,9][2,10][3,10][8,10][9,10][1,11][2,11][9,11][10,11][0,12][1,12][10,12][11,12]", "[0,0][1,0][13,0][14,0][1,1][2,1][12,1][13,1][2,2][3,2][11,2][12,2][2,3][3,3][4,3][10,3][11,3][12,3][3,4][4,4][10,4][11,4][4,5][5,5][9,5][10,5][5,6][6,6][8,6][9,6][10,6][5,7][6,7][7,7][8,7][9,7][6,8][7,8][8,8][6,9][7,9][8,9][5,10][6,10][7,10][8,10][9,10][4,11][5,11][6,11][8,11][9,11][4,12][5,12][9,12][10,12][3,13][4,13][10,13][11,13][2,14][3,14][4,14][10,14][11,14][12,14][2,15][3,15][11,15][12,15][1,16][2,16][12,16][13,16][0,17][1,17][13,17][14,17]", "[0,0][1,0][10,0][11,0][0,1][1,1][10,1][11,1][1,2][2,2][9,2][10,2][1,3][2,3][9,3][10,3][1,4][2,4][3,4][8,4][9,4][2,5][3,5][8,5][9,5][2,6][3,6][8,6][9,6][3,7][4,7][7,7][8,7][3,8][4,8][7,8][8,8][3,9][4,9][6,9][7,9][4,10][5,10][6,10][7,10][4,11][5,11][6,11][7,11][5,12][6,12][5,13][6,13][4,14][5,14][4,15][5,15][4,16][5,16]", "[0,0][1,0][12,0][13,0][1,1][2,1][11,1][12,1][1,2][2,2][3,2][10,2][11,2][12,2][2,3][3,3][10,3][11,3][3,4][4,4][9,4][10,4][3,5][4,5][5,5][9,5][10,5][4,6][5,6][8,6][9,6][4,7][5,7][6,7][7,7][8,7][9,7][5,8][6,8][7,8][8,8][6,9][7,9][6,10][7,10][6,11][7,11][6,12][7,12][6,13][7,13][6,14][7,14][6,15][7,15][6,16][7,16][6,17][7,17]", "[0,0][1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][10,0][0,1][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][8,2][9,2][10,2][7,3][8,3][9,3][6,4][7,4][8,4][5,5][6,5][7,5][4,6][5,6][6,6][3,7][4,7][5,7][2,8][3,8][4,8][1,9][2,9][3,9][0,10][1,10][2,10][0,11][1,11][2,11][3,11][4,11][5,11][6,11][7,11][8,11][9,11][10,11][0,12][1,12][2,12][3,12][4,12][5,12][6,12][7,12][8,12][9,12][10,12]", "[1,0][2,0][3,0][4,0][5,0][6,0][7,0][8,0][9,0][10,0][11,0][12,0][1,1][2,1][3,1][4,1][5,1][6,1][7,1][8,1][9,1][10,1][11,1][12,1][10,2][11,2][12,2][10,3][11,3][9,4][10,4][8,5][9,5][7,6][8,6][9,6][7,7][8,7][6,8][7,8][5,9][6,9][4,10][5,10][3,11][4,11][5,11][3,12][4,12][2,13][3,13][1,14][2,14][0,15][1,15][2,15][0,16][1,16][2,16][3,16][4,16][5,16][6,16][7,16][8,16][9,16][10,16][11,16][12,16][0,17][1,17][2,17][3,17][4,17][5,17][6,17][7,17][8,17][9,17][10,17][11,17][12,17]"};
        return model;
    }

    String[] getCodeValue(BufferedImage image, ArrayList<PairXY> list) {
        String[] arrayRet = null;
        String sModel = "";
        boolean iRet = false;
        int[] arrayFlag = new int[image.getWidth()];

        int i;
        int xy;
        for(int arrayNode = 0; arrayNode < image.getWidth(); ++arrayNode) {
            boolean nPos = true;

            for(i = 0; i < image.getHeight(); ++i) {
                xy = this.pixelConvert(image.getRGB(arrayNode, i));
                if(xy == 0) {
                    nPos = false;
                    break;
                }
            }

            if(nPos) {
                arrayFlag[arrayNode] = 1;
            } else {
                arrayFlag[arrayNode] = 0;
            }
        }

        Node[] var14 = new Node[10];
        int var15 = 0;

        for(i = 0; i < image.getWidth(); ++i) {
            if(arrayFlag[i] != 1) {
                xy = i;

                int bFlag;
                for(bFlag = i; bFlag < image.getWidth(); ++bFlag) {
                    i = bFlag;
                    if(arrayFlag[bFlag] == 1) {
                        break;
                    }
                }

                bFlag = i - 1;
                if(bFlag > xy) {
                    var14[var15] = new Node();
                    var14[var15].x1 = xy;
                    var14[var15].x2 = bFlag;
                    ++var15;
                }
            }
        }

        for(i = 0; i < var15; ++i) {
            int x;
            int expRGB;
            boolean var16;
            for(xy = 0; xy < image.getHeight(); ++xy) {
                var16 = false;

                for(x = var14[i].x1; x <= var14[i].x2; ++x) {
                    expRGB = this.pixelConvert(image.getRGB(x, xy));
                    if(expRGB == 0) {
                        var14[i].y1 = xy;
                        var16 = true;
                        break;
                    }
                }

                if(var16) {
                    break;
                }
            }

            for(xy = image.getHeight() - 1; xy >= 0; --xy) {
                var16 = false;

                for(x = var14[i].x1; x <= var14[i].x2; ++x) {
                    expRGB = this.pixelConvert(image.getRGB(x, xy));
                    if(expRGB == 0) {
                        var14[i].y2 = xy;
                        var16 = true;
                        break;
                    }
                }

                if(var16) {
                    break;
                }
            }
        }

        arrayRet = new String[var15];

        for(i = 0; i < var15; ++i) {
            if(var14[i] != null) {
                PairXY var17 = new PairXY();
                arrayRet[i] = var14[i].getValue(this, image, var17);
                list.add(var17);
            }
        }

        return arrayRet;
    }

    ArrayList<PairXY> getListFromValue(String value) {
        ArrayList ret = new ArrayList();
        String[] array = value.split("]\\[");

        for(int i = 0; i < array.length; ++i) {
            String sv = array[i];
            sv = sv.replaceAll("\\[", "");
            sv = sv.replaceAll("]", "");
            String[] tv = sv.split(",");
            PairXY xy = new PairXY();
            xy.x = Integer.parseInt(tv[0]);
            xy.y = Integer.parseInt(tv[1]);
            ret.add(xy);
        }

        return ret;
    }

    public String getCode(BufferedImage image) {
        String sCode = "";
        String sApd = "    ";
        String[] modelkey = this.getModelKey();
        String[] modelvalue = this.getModelValue();
        HashMap map = new HashMap();

        int height;
        for(height = 0; height < modelkey.length; ++height) {
            CRC32 width = new CRC32();
            width.update(modelvalue[height].getBytes());
            long list = width.getValue();
            map.put(String.valueOf(list), modelkey[height]);
        }

        height = image.getHeight();
        int var27 = image.getWidth();
        ArrayList var28 = new ArrayList();
        String[] sValueArray = this.getCodeValue(image, var28);

        for(int i = 0; i < sValueArray.length; ++i) {
            CRC32 crc32 = new CRC32();
            crc32.update(sValueArray[i].getBytes());
            long id = crc32.getValue();
            if(map.containsKey(String.valueOf(id))) {
                sCode = sCode + (String)map.get(String.valueOf(id));
                sApd = sApd + (String)map.get(String.valueOf(id));
                sApd = sApd + "___";
            } else {
                MyCode myCode = new MyCode();
                int[][] cmp = new int[((PairXY)var28.get(i)).x][((PairXY)var28.get(i)).y];
                ArrayList xyList = this.getListFromValue(sValueArray[i]);

                for(int listPos = 0; listPos < xyList.size(); ++listPos) {
                    cmp[((PairXY)xyList.get(listPos)).x][((PairXY)xyList.get(listPos)).y] = 1;
                }

                ArrayList var29 = new ArrayList();
                ArrayList listValue = new ArrayList();

                int ss;
                for(ss = 0; ss < modelkey.length; ++ss) {
                    ArrayList n = this.getListFromValue(modelvalue[ss]);
                    boolean bMatch = false;
                    int matchX = 0;

                    for(int xx = 0; xx < ((PairXY)var28.get(i)).x; ++xx) {
                        bMatch = false;

                        for(int yy = 0; yy < ((PairXY)var28.get(i)).y; ++yy) {
                            bMatch = false;

                            for(int tt = 0; tt < n.size(); ++tt) {
                                if(((PairXY)n.get(tt)).x + xx >= ((PairXY)var28.get(i)).x || ((PairXY)n.get(tt)).y + yy >= ((PairXY)var28.get(i)).y) {
                                    bMatch = false;
                                    break;
                                }

                                if(cmp[((PairXY)n.get(tt)).x + xx][((PairXY)n.get(tt)).y + yy] != 1) {
                                    bMatch = false;
                                    break;
                                }

                                bMatch = true;
                            }

                            if(bMatch) {
                                break;
                            }
                        }

                        if(bMatch) {
                            matchX = xx;
                            break;
                        }
                    }

                    if(bMatch) {
                        var29.add(Integer.valueOf(matchX));
                        listValue.add(modelkey[ss]);
                    }
                }

                for(ss = 0; ss < 100; ++ss) {
                    for(int var30 = 0; var30 < var29.size(); ++var30) {
                        if(ss == ((Integer)var29.get(var30)).intValue()) {
                            sApd = sApd + "(" + var29.get(var30) + ":" + (String)listValue.get(var30) + ")";
                            myCode.addValue(((Integer)var29.get(var30)).intValue(), (String)listValue.get(var30));
                        }
                    }
                }

                sCode = sCode + myCode.getValue();
                sApd = sApd + myCode.getValue();
                sApd = sApd + "___";
            }
        }

        return sCode;
    }
}
